#!/bin/sh
#; $HOME/.shell/aliases
#; Portable aliases that can be used on a variety of machines.
#; <eric@catastrophe.net> || <http://users.catastrophe.net/~eric/>

#; CVS variables.
CVS_RSH="ssh"
CVSDEFAULTWORKDIR="~/cvsroot"
CVSWORKDIR="${CVSDEFAULTWORKDIR}"
export CVS_RSH CVSDEFAULTWORKDIR CVSWORKDIR

#; Setup the SSH auth socket for the SSH agent.
SSHDIR="${HOME}/.ssh"
SSH_AUTH_SOCK="${SSHDIR}/.ssh-agent-socket"
export SSHDIR SSH_AUTH_SOCK

#; Check if we store local LaTeX class files, etc.., in ${HOME}.
#; If so, set the proper environmental variables.
TEXUSERDIR="${HOME}/.TeX"
TEXINPUTDIR="$TEXUSERDIR/class"
if [ -d "$TEXINPUTDIR" ]; then
 if (find /usr -maxdepth 1 -mindepth 1 -type f >/dev/null 2>&1);
then
  TEXINPUTS=""
  export TEXINPUTS
  for inputdir in `find $TEXINPUTDIR -type d -maxdepth 1 -mindepth 1`; do
   TEXINPUTS="$inputdir:$TEXINPUTS"
   export TEXINPUTS
  done
 else
  echo ' ! $TEXINPUTS must be set manually, the little find trick does not work.'
 fi
fi

#; Give ghostview some options to better fit on A4 type paper.
#; This is useful for the prosper class under LaTeX.
GS_OPTIONS="-sPAPERSIZE=a4 -dAutoFilterColorImages=false -dColorImageFilter=/FlateEncode"
export GS_OPTIONS

#; Where is our user web root? It's usually here.
WWW="${HOME}/WWW"
WWWARCH="${WWW}/arch/`date +%Y`"
export WWW WWWARCH

#; A small alias to add SSH keys
ashk () {
 SSHKEYDIR="${SSHDIR}/keys/prv"
 if [ -d "${SSHKEYDIR}" ]; then
  echo "Adding SSH keys to ssh-agent..."
  for keys in `/bin/ls $SSHKEYDIR/*`; do
   echo " ! Adding $keys..."
   ssh-add $keys
  done
  echo "done. Don't forget to lock it."
 fi
}

#; Small aliases.
alias trace="traceroute -n"
alias cls="clear"
alias more="${PAGER}"

# Gary specific
alias ls='ls --color=auto --classify'
alias ll='ls -l'
alias cp='cp -i '
alias mv='mv -i '
alias rm='rm -i '
alias vip='vi ~/.bash_profile & '
alias vir='vi ~/.shell/bashrc & '
alias sop='. ~/.bash_profile '
alias which='type -p '

#; See if SSH exists (can't imagine why it wouldn't),
#; then wrap it into something that shows the disconnect
#; time. This is helpful when trying to diagnose when
#; sockets are killed off by NAT devices, etc..
if (type ssh &>/dev/null); then
 ssh () {
  echo "Connecting to $* via ssh..."
  if (type time &>/dev/null); then
   `which time` `type -P ssh` $*
  else
  `type -P ssh` $*
  fi
  echo "ssh session to $* ended `date`"
 }
fi

#; See if we need to use gmake.
if [ "`uname -s`" = "FreeBSD" ]; then
 if (type gmake &>/dev/null); then
 alias make="gmake"
 fi
fi

#; Set the $LOCKPRG variable for screen.
#if (type screen &>/dev/null); then
# if (type vlock &>/dev/null); then
#  LOCKPRG="`which vlock`"
#  export LOCKPRG
# else
#  echo " ! Can't find a good lock program."
# fi
#fi

#; If ytalk is on this machine, use it instead of talk.
if (type ytalk &>/dev/null); then
 alias talk="ytalk"
fi

#; bcwipe - one day may be your friend, so make it easy to use!
if (type bcwipe &>/dev/null); then
 alias wipe='bcwipe -v -n 52'
fi

#; Lookup to ARIN
if (uname -s | grep BSD &>/dev/null); then
 alias awhois='whois -h whois.arin.net'
fi

#; Shell alias to move into CVS working directory.
cdcvsdir () {
 if [ ! -d ${CVSWORKDIR} ]; then
  mkdir -p ${CVSWORKDIR}
  echo " ! Made ${CVSWORKDIR}"
 fi
 echo " * Entering ${CVSWORKDIR}..."
 cd ${CVSWORKDIR}
}

#; Reconfigure CVS variables if set differently.
cvsdefault () {
 CVSROOT="$CVSDEFAULTROOT"
 CVSWORKDIR="$CVSDEFAULTWORKDIR"
 export CVSROOT CVSWORKDIR
 echo " * CVSROOT    = ${CVSROOT}"
 echo " * CVSWORKDIR = ${CVSWORKDIR}"
}

#; Clean up our CVS environment. Nice for when moving
#; between various environments.
clearcvsdev () {
 echo " * Clearing CVS Environment CVSWORKDIR = ${CVSWORKDIR}"
 echo " ! Have you performed a CVS commit? (yes/no)"
  read input
   if [ "$input" = "yes" ]; then
    echo " ! Clearing CVS environment"
    rm -rf ${CVSWORKDIR}
    CVSROOT="${CVSDEFAULTROOT}"
    CVSWORKDIR="${CVSDEFAULTWORKDIR}"
    export CVSROOT CVSWORKDIR
    echo " * CVS environment cleared."
   else
    echo " ! Verify you have commited changes"
    echo " * CVS environment unchanged."
   fi
}

#; Show the directory that we're in when we `cd`.
#;cd () {
#; builtin cd $1
#; pwd
#;}

#; Clean up CVS directories.
rmcvsdir () {
 find . -name CVS |xargs rm -rf
}

#; A function to clean up web permissions.
fixwwwperms () {
 DIRPERM="0711"
 FILEPERM="0644"
 echo " * Are you in the correct directory? (yes/no)"
 pwd
  read input
  if [ "$input" = "yes" ]; then
   echo " ! Fixing up WWW Permissions"
   find . -type f | xargs chmod ${FILEPERM}
   find . -type d | xargs chmod ${DIRPERM}
   echo " * done."
  else
   echo " ! Invalid response."
  fi
}

#; Watch a command, over and over...and over and over.
watch () {
 RUN="$*"
 while :;
  do
   clear
   echo "Spying on output of $RUN every 1 seconds..."
   echo "-------------------------------------------"
   ${RUN}
   sleep 1
  done
}

#; A simple notepad - for jotting quick thoughts down.
#; Yes, it's a bit quicker than `vi filename`
snp () {
 FILENAME="${TMP}/snp-`date +%s`"
 if [ ! -f ${FILENAME} ]; then
  cat > ${FILENAME}
 fi
}

#; Archiving files via rsync.
if (type rsync &>/dev/null); then
 alias arsync="rsync -e ssh --stats --progres -cavz"
fi

#; Sooner or later, ${TMP} gets too big. Help clean it up
#; with this little snippet.
purgetmp () {
 clear
 echo
 echo "* This will purge ${TMP}. (^C if no)"
  echo -n " ! Will execute in "
  for num in 4 3 2 1;
   do
    echo -n "$num "
    sleep 1
   done
   echo
   echo "* Now"
   clear
  if [ ! -z "${TMP}" ]; then
    echo "+---------------------------------------------------------------------+"
    echo '* Purging ${TMP} -- careful what you do here. (^C exits)'
    echo "+---------------------------------------------------------------------+"
    find ${TMP} -user ${USER} -atime +90 -exec rm -ir \{\} \;
  fi
}

#; $Id: aliases,v 1.3 2003/06/06 13:43:49 gary Exp $
